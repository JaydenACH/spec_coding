# Generated by Django 4.2.7 on 2025-07-24 14:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        help_text="Phone number in E.164 format",
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be in E.164 format (e.g., +1234567890)",
                                regex="^\\+[1-9]\\d{1,14}$",
                            )
                        ],
                        verbose_name="phone number",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Customer display name",
                        max_length=100,
                        verbose_name="name",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("assigned", "Assigned"),
                            ("unassigned", "Unassigned"),
                        ],
                        default="unassigned",
                        help_text="Customer assignment status",
                        max_length=15,
                    ),
                ),
                (
                    "respond_io_contact_id",
                    models.CharField(
                        blank=True,
                        help_text="Corresponding Respond.IO contact ID",
                        max_length=100,
                        null=True,
                        unique=True,
                        verbose_name="Respond.IO Contact ID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="email address",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        default="en",
                        help_text="Customer preferred language code",
                        max_length=10,
                        verbose_name="language",
                    ),
                ),
                (
                    "country_code",
                    models.CharField(
                        blank=True,
                        help_text="ISO country code",
                        max_length=3,
                        verbose_name="country code",
                    ),
                ),
                (
                    "profile_picture_url",
                    models.URLField(
                        blank=True,
                        help_text="Customer profile picture from Respond.IO",
                        verbose_name="profile picture URL",
                    ),
                ),
                (
                    "first_contact_date",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When customer first contacted us",
                        verbose_name="first contact date",
                    ),
                ),
                (
                    "last_message_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="When customer last sent a message",
                        null=True,
                        verbose_name="last message date",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "assignment_history",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="History of customer assignments",
                        verbose_name="assignment history",
                    ),
                ),
                (
                    "assigned_user",
                    models.ForeignKey(
                        blank=True,
                        help_text="Salesperson assigned to this customer",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_customers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer",
                "verbose_name_plural": "Customers",
                "ordering": ["-last_message_date", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Conversation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("closed", "Closed")],
                        default="active",
                        help_text="Current conversation status",
                        max_length=10,
                    ),
                ),
                (
                    "respond_io_conversation_id",
                    models.CharField(
                        blank=True,
                        help_text="Corresponding Respond.IO conversation ID",
                        max_length=100,
                        null=True,
                        unique=True,
                        verbose_name="Respond.IO Conversation ID",
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True,
                        help_text="Conversation subject or topic",
                        max_length=200,
                        verbose_name="subject",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=10,
                        verbose_name="priority",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "last_message_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp of last message in conversation",
                        null=True,
                        verbose_name="last message at",
                    ),
                ),
                (
                    "closed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="closed at"
                    ),
                ),
                (
                    "message_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Total number of messages in conversation",
                        verbose_name="message count",
                    ),
                ),
                (
                    "internal_comment_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Total number of internal comments",
                        verbose_name="internal comment count",
                    ),
                ),
                (
                    "assigned_user",
                    models.ForeignKey(
                        blank=True,
                        help_text="Salesperson handling this conversation",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="conversations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "closed_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who closed the conversation",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="closed_conversations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="Customer in this conversation",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversations",
                        to="customers.customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversation",
                "verbose_name_plural": "Conversations",
                "ordering": ["-last_message_at", "-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="customer",
            index=models.Index(
                fields=["phone_number"], name="customers_c_phone_n_cabfe1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customer",
            index=models.Index(
                fields=["status", "assigned_user"], name="customers_c_status_f47b21_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customer",
            index=models.Index(
                fields=["respond_io_contact_id"], name="customers_c_respond_590760_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customer",
            index=models.Index(
                fields=["last_message_date"], name="customers_c_last_me_acff9c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customer",
            index=models.Index(
                fields=["created_at"], name="customers_c_created_1ed0f4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversation",
            index=models.Index(
                fields=["customer", "status"], name="customers_c_custome_d75f2e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversation",
            index=models.Index(
                fields=["assigned_user", "status"],
                name="customers_c_assigne_072a23_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="conversation",
            index=models.Index(
                fields=["respond_io_conversation_id"],
                name="customers_c_respond_4d4ec8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="conversation",
            index=models.Index(
                fields=["last_message_at"], name="customers_c_last_me_2d0f8f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversation",
            index=models.Index(
                fields=["created_at"], name="customers_c_created_c17012_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversation",
            index=models.Index(
                fields=["priority", "status"], name="customers_c_priorit_5ee118_idx"
            ),
        ),
    ]
