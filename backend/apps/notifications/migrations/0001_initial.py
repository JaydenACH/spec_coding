# Generated by Django 4.2.7 on 2025-07-24 14:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("message", "New Message"),
                            ("assignment", "Customer Assignment"),
                            ("mention", "User Mention"),
                            ("comment", "Internal Comment"),
                            ("file_share", "File Share"),
                            ("system", "System Notification"),
                            ("reminder", "Reminder"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                        ],
                        help_text="Type of notification",
                        max_length=15,
                    ),
                ),
                (
                    "delivery_method",
                    models.CharField(
                        choices=[
                            ("in_app", "In-App"),
                            ("email", "Email"),
                            ("push", "Push Notification"),
                            ("sms", "SMS"),
                        ],
                        help_text="Delivery method for this notification type",
                        max_length=10,
                    ),
                ),
                (
                    "is_enabled",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this notification type is enabled",
                        verbose_name="enabled",
                    ),
                ),
                (
                    "minimum_priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        help_text="Minimum priority level to receive notifications",
                        max_length=10,
                        verbose_name="minimum priority",
                    ),
                ),
                (
                    "quiet_hours_start",
                    models.TimeField(
                        blank=True,
                        help_text="Start of quiet hours (no notifications)",
                        null=True,
                        verbose_name="quiet hours start",
                    ),
                ),
                (
                    "quiet_hours_end",
                    models.TimeField(
                        blank=True,
                        help_text="End of quiet hours",
                        null=True,
                        verbose_name="quiet hours end",
                    ),
                ),
                (
                    "weekend_enabled",
                    models.BooleanField(
                        default=True,
                        help_text="Whether to receive notifications on weekends",
                        verbose_name="weekend notifications",
                    ),
                ),
                (
                    "digest_frequency",
                    models.CharField(
                        choices=[
                            ("immediate", "Immediate"),
                            ("hourly", "Hourly"),
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("disabled", "Disabled"),
                        ],
                        default="immediate",
                        help_text="How often to send digest notifications",
                        max_length=20,
                        verbose_name="digest frequency",
                    ),
                ),
                (
                    "max_per_day",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Maximum notifications per day (null = unlimited)",
                        null=True,
                        verbose_name="max per day",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User these preferences belong to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification Preference",
                "verbose_name_plural": "Notification Preferences",
                "ordering": ["user", "notification_type", "delivery_method"],
                "indexes": [
                    models.Index(
                        fields=["user", "is_enabled"],
                        name="notificatio_user_id_fb01c4_idx",
                    ),
                    models.Index(
                        fields=["notification_type", "delivery_method"],
                        name="notificatio_notific_a2a7cd_idx",
                    ),
                ],
                "unique_together": {("user", "notification_type", "delivery_method")},
            },
        ),
        migrations.CreateModel(
            name="NotificationDigest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "digest_type",
                    models.CharField(
                        choices=[
                            ("hourly", "Hourly"),
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                        ],
                        help_text="Type of digest",
                        max_length=10,
                    ),
                ),
                (
                    "delivery_method",
                    models.CharField(
                        choices=[
                            ("in_app", "In-App"),
                            ("email", "Email"),
                            ("push", "Push Notification"),
                            ("sms", "SMS"),
                        ],
                        help_text="How digest will be delivered",
                        max_length=10,
                    ),
                ),
                (
                    "notification_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of notifications in digest",
                        verbose_name="notification count",
                    ),
                ),
                (
                    "digest_content",
                    models.JSONField(
                        default=dict,
                        help_text="Aggregated notification content",
                        verbose_name="digest content",
                    ),
                ),
                (
                    "is_sent",
                    models.BooleanField(
                        default=False,
                        help_text="Whether digest has been sent",
                        verbose_name="sent",
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When digest was sent",
                        null=True,
                        verbose_name="sent at",
                    ),
                ),
                (
                    "period_start",
                    models.DateTimeField(
                        help_text="Start of digest period", verbose_name="period start"
                    ),
                ),
                (
                    "period_end",
                    models.DateTimeField(
                        help_text="End of digest period", verbose_name="period end"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User receiving the digest",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_digests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification Digest",
                "verbose_name_plural": "Notification Digests",
                "ordering": ["-period_end"],
                "indexes": [
                    models.Index(
                        fields=["user", "is_sent"],
                        name="notificatio_user_id_dc03ec_idx",
                    ),
                    models.Index(
                        fields=["digest_type", "period_end"],
                        name="notificatio_digest__409383_idx",
                    ),
                    models.Index(
                        fields=["is_sent", "created_at"],
                        name="notificatio_is_sent_00970a_idx",
                    ),
                ],
                "unique_together": {
                    ("user", "digest_type", "delivery_method", "period_start")
                },
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("message", "New Message"),
                            ("assignment", "Customer Assignment"),
                            ("mention", "User Mention"),
                            ("comment", "Internal Comment"),
                            ("file_share", "File Share"),
                            ("system", "System Notification"),
                            ("reminder", "Reminder"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                        ],
                        help_text="Type of notification",
                        max_length=15,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Notification title",
                        max_length=200,
                        verbose_name="title",
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        help_text="Notification message content", verbose_name="message"
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        help_text="Notification priority level",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("read", "Read"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        help_text="Notification delivery status",
                        max_length=10,
                    ),
                ),
                (
                    "is_read",
                    models.BooleanField(
                        default=False,
                        help_text="Whether notification has been read",
                        verbose_name="read",
                    ),
                ),
                (
                    "read_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When notification was marked as read",
                        null=True,
                        verbose_name="read at",
                    ),
                ),
                (
                    "object_id",
                    models.UUIDField(
                        blank=True, help_text="ID of related object", null=True
                    ),
                ),
                (
                    "action_url",
                    models.CharField(
                        blank=True,
                        help_text="URL to navigate to when notification is clicked",
                        max_length=500,
                        verbose_name="action URL",
                    ),
                ),
                (
                    "action_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional data for notification actions",
                        verbose_name="action data",
                    ),
                ),
                (
                    "in_app_delivered",
                    models.BooleanField(
                        default=False,
                        help_text="Whether in-app notification was delivered",
                        verbose_name="in-app delivered",
                    ),
                ),
                (
                    "email_delivered",
                    models.BooleanField(
                        default=False,
                        help_text="Whether email notification was delivered",
                        verbose_name="email delivered",
                    ),
                ),
                (
                    "push_delivered",
                    models.BooleanField(
                        default=False,
                        help_text="Whether push notification was delivered",
                        verbose_name="push delivered",
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When notification should be automatically removed",
                        null=True,
                        verbose_name="expires at",
                    ),
                ),
                (
                    "group_key",
                    models.CharField(
                        blank=True,
                        help_text="Key for grouping similar notifications",
                        max_length=100,
                        verbose_name="group key",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "scheduled_for",
                    models.DateTimeField(
                        blank=True,
                        help_text="When notification should be sent (for scheduled notifications)",
                        null=True,
                        verbose_name="scheduled for",
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When notification was actually sent",
                        null=True,
                        verbose_name="sent at",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="Type of related object",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        help_text="User receiving the notification",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who triggered the notification",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification",
                "verbose_name_plural": "Notifications",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["recipient", "is_read", "created_at"],
                        name="notificatio_recipie_86ea8b_idx",
                    ),
                    models.Index(
                        fields=["notification_type", "priority"],
                        name="notificatio_notific_b9c0e7_idx",
                    ),
                    models.Index(
                        fields=["status", "scheduled_for"],
                        name="notificatio_status_d8d933_idx",
                    ),
                    models.Index(
                        fields=["group_key", "recipient"],
                        name="notificatio_group_k_699262_idx",
                    ),
                    models.Index(
                        fields=["expires_at"], name="notificatio_expires_4f3289_idx"
                    ),
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="notificatio_content_702c56_idx",
                    ),
                ],
            },
        ),
    ]
